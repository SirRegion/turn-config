items:
  ComplianceBase Utilities:
    items:
      Pull a docker image:
        environment:
          MTEC_DOCKER_REGISTRY:
            persistent: "Yes"
          CB_DOCKER_CONTAINER:
            persistent: "Yes"
          CB_VARIANT:
            persistent: "Yes"
          CB_VERSION:
            persistent: "Yes"
        powershell:
          - docker pull "${Env:MTEC_DOCKER_REGISTRY}/main/${Env:CB_DOCKER_CONTAINER}/${Env:CB_VARIANT}:${Env:CB_VERSION}"
      Inspect:
        items:
          Open an interactive Shell inside the Container:
            environment:
              CB_DOCKER_CONTAINER:
                persistent: "Yes"
            powershell:
              - Start-Process PowerShell -ArgumentList "docker exec -it $Env:CB_DOCKER_CONTAINER powershell; Read-Host 'Press Enter'"
          Run docker inspect with the current container:
            environment:
              CB_DOCKER_CONTAINER:
                persistent: "Yes"
            powershell:
              - docker inspect $CB_DOCKER_CONTAINER
          Show logs of the current container:
            items:
              Docker logs:
                environment:
                  CB_DOCKER_CONTAINER:
                    persistent: "Yes"
                powershell:
                  - docker logs $CB_DOCKER_CONTAINER -f
              Show MySQL logs:
                environment:
                  CB_DOCKER_CONTAINER:
                    persistent: "Yes"
                powershell:
                  - docker exec $Env:CB_DOCKER_CONTAINER powershell -c 'Get-Content C:/log/mysql/mysql-error.log -Wait'
              Nginx Logs:
                items:
                  Error Log:
                    environment:
                      CB_DOCKER_CONTAINER:
                        persistent: "Yes"
                    powershell:
                      - docker exec $Env:CB_DOCKER_CONTAINER powershell -c 'Get-Content C:/log/nginx/error.log -Wait'
                  Access Log:
                    environment:
                      CB_DOCKER_CONTAINER:
                        persistent: "Yes"
                    powershell:
                      - docker exec $Env:CB_DOCKER_CONTAINER powershell -c 'Get-Content C:/log/nginx/access.log -Wait'
      Configure:
        powershell:
          - echo "not implemented"
      Utilities:
        items:
          Push Files to the Container:
            powershell:
              - echo "not implemented"
          Pull Files from Container:
            powershell:
              - echo "not implemented"
          Open an interactive Shell inside the Container:
            environment:
              CB_DOCKER_CONTAINER:
                persistent: "Yes"
            powershell:
              - Start-Process PowerShell -ArgumentList "docker exec -it $Env:CB_DOCKER_CONTAINER powershell; Read-Host 'Press Enter'"
          Create Data Backup:
            powershell:
              - $CB_BACKUP_PATH="/mnt/backup/cb_backend_v0_1/mysqldump_$(get-date -f yyyy-MM-dd_HHmm).sql"
              - docker exec "$Env:CB_DOCKER_CONTAINER" powershell -C "mkdir /mnt/backup/cb_backend_v0_1 -Force | Out-Null; mysqldump --user='root' --password='OwobEB7M' --databases cb_backend_v0_1 > '$env:CB_BACKUP_PATH'"
          Show all environment variables:
            powershell:
              - ./dump.ps1
          Install docker-compose v1.29.2:
            powershell:
              - [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
              - Invoke-WebRequest "https://github.com/docker/compose/releases/download/v2.7.0/docker-compose-Windows-x86_64.exe" -UseBasicParsing -OutFile $Env:ProgramFiles\Docker\docker-compose.exe

      Run Container:
        environment:
          CB_DOCKER_PORT:
            persistent: "Yes"
          CB_DOCKER_CONTAINER:
            persistent: "Yes"
          CB_VARIANT:
            persistent: "Yes"
          CB_VERSION:
            persistent: "Yes"
          CB_DOMAIN:
            persistent: "Yes"
        powershell:
          - ./run.ps1
      Stop Container:
        environment:
          CB_DOCKER_CONTAINER:
            persistent: "Yes"
        powershell:
          - docker stop ${CB_DOCKER_CONTAINER}
      Remove Container:
        environment:
          CB_DOCKER_CONTAINER:
            persistent: "Yes"
        confirm: Are you sure you want to remove the container? Data might be lost!
        powershell:
          - docker rm -f ${env:CB_DOCKER_CONTAINER}
      Pull new image and restart Container:
        environment:
          CB_DOCKER_PORT:
            persistent: "Yes"
          CB_DOCKER_CONTAINER:
            persistent: "Yes"
          CB_VARIANT:
            persistent: "Yes"
          CB_VERSION:
            persistent: "Yes"
          CB_DOMAIN:
            persistent: "Yes"
          MTEC_DOCKER_REGISTRY:
            persistent: "Yes"
        powershell:
          - docker pull "${Env:MTEC_DOCKER_REGISTRY}/main/${Env:CB_DOCKER_CONTAINER}/${Env:CB_VARIANT}:${Env:CB_VERSION}"
          - $CB_BACKUP_PATH="/mnt/backup/cb_backend_v0_1/mysqldump_$(get-date -f yyyy-MM-dd_HHmm).sql"
          - docker exec "$Env:CB_DOCKER_CONTAINER" powershell -C "mkdir /mnt/backup/cb_backend_v0_1 -Force | Out-Null; mysqldump --user='root' --password='OwobEB7M' --databases cb_backend_v0_1 > '$env:CB_BACKUP_PATH'"
          - docker rm -f ${env:CB_DOCKER_CONTAINER}
          - ./run.ps1
